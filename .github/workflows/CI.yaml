name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test-setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - ubuntu:18.04
          - ubuntu:20.04
          - ubuntu:22.04
          - centos:7
          - amazonlinux:2
      fail-fast: false
    container:
      image: ${{ matrix.image }}
    steps:
    - name: Install dependencies
      if: ${{ startsWith(matrix.image, 'amazonlinux:') }}
      run: yum install gzip tar -y

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up environment
      if: ${{ startsWith(matrix.image, 'ubuntu:') }}
      run: |
        echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
        echo "DEBCONF_NONINTERACTIVE_SEEN=true" >> $GITHUB_ENV

    - name: Test swiftbox setup
      run: ./swiftbox.sh list

  test-ubuntu:
    runs-on: ubuntu-20.04
    env:
      MAINVER: "5.6.3"
      ALTVER: "5.3.3"
      OLDVER: "2.2"
    defaults:
      run:
        shell: bash --login -eo pipefail {0}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Test swiftbox version
      run: |
        chmod +x swiftbox.sh
        ./swiftbox.sh -v
        ./swiftbox.sh --version

    - name: Test swiftbox help
      run: |
        ./swiftbox.sh -h
        ./swiftbox.sh --help

    - name: Install swiftbox
      run: |
        sudo cp swiftbox.sh /usr/bin/swiftbox
        swiftbox -v

    - name: Test swiftbox check
      run: |
        swiftbox check $MAINVER
        swiftbox check $ALTVER
        swiftbox check $OLDVER

    - name: Test swiftbox get with sudo
      run: |
        sudo swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh
        if [ `which swift` != "/opt/swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $MAINVER is not installed correctly."
        fi
        swiftc -v

    - name: Test swiftbox get
      run: |
        swiftbox get $MAINVER
        swiftbox get $ALTVER
        source /etc/environment && source /opt/swiftbox/env.sh && source $HOME/.swiftbox/env.sh
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $MAINVER is not installed correctly."
          exit 2
        fi
        swiftc -v

    - name: Test swiftbox list and use
      run: |
        swiftbox list
        sudo swiftbox list --short
        swiftbox use $ALTVER
        source /etc/environment && source /opt/swiftbox/env.sh && source $HOME/.swiftbox/env.sh
        swiftbox list
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$ALTVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not selected correctly."
        fi
        swiftc -v

    - name: Test swiftbox cleanup
      run: |
        swiftbox cleanup
        sudo swiftbox cleanup

    - name: Test swiftbox remove
      run: |
        sudo swiftbox remove $MAINVER
        swiftbox remove $ALTVER
        swiftbox use $MAINVER

    - name: Test Swift status
      run: |
        echo "\$PATH=$PATH"
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not removed correctly."
        fi
        swiftc -v

    - name: Test Swift compiler
      run: |
        swift test.swift
        swiftc test.swift -o test && ./test

    - name: Test swiftbox close
      run: swiftbox close

    - name: Test Swift disabled
      run: |
        if [ `which swift` != /usr/* ]
        then
          echo "::error::swiftbox is not closed correctly."
        fi

  test-ubuntu-alias:
    container:
      image: ubuntu:22.10
    runs-on: ubuntu-latest
    env:
      MAINVER: "5.7.3"
      ALTVER: "5.7"
      OLDVER: "5.5.3"
    defaults:
      run:
        shell: su - swifter -c "/bin/bash --login -eo pipefail {0}"
    steps:
    - name: Create a new user
      shell: bash
      run: |
        apt-get update
        apt-get install sudo usermode -y
        useradd swifter --create-home -s /bin/bash
        echo "swifter ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        echo "export MAINVER=$MAINVER" >> /home/swifter/.bash_profile
        echo "export ALTVER=$ALTVER" >> /home/swifter/.bash_profile
        echo "export OLDVER=$OLDVER" >> /home/swifter/.bash_profile

    - name: Checkout
      uses: actions/checkout@v3

    - name: Move repo
      shell: bash
      run: |
        mv ./* /home/swifter
        chown -R swifter /home/swifter

    - name: Test swiftbox version
      run: |
        chmod +x swiftbox.sh
        ./swiftbox.sh -v
        ./swiftbox.sh --version

    - name: Test swiftbox help
      run: |
        ./swiftbox.sh -h
        ./swiftbox.sh --help

    - name: Install swiftbox
      run: |
        sudo cp swiftbox.sh /usr/bin/swiftbox
        swiftbox -v

    - name: Init swiftbox
      env:
        DEBIAN_FRONTEND: noninteractive
        DEBCONF_NONINTERACTIVE_SEEN: true
      shell: bash
      run: swiftbox list

    - name: Test swiftbox short-term alias and check
      env:
        SWIFTBOX_SYSALIAS: 22.04
      shell: bash
      run: |
        swiftbox check $MAINVER
        swiftbox check nightly

    - name: Test swiftbox long-term alias
      run: |
        swiftbox list
        sudo sh -c 'echo "20.04" > /opt/swiftbox/.system-alias'
        echo "20.04" > .swiftbox/.system-alias
        swiftbox -v
        sudo swiftbox -v

    - name: Test swiftbox check
      run: |
        swiftbox check $MAINVER
        swiftbox check $ALTVER
        swiftbox check $OLDVER
        swiftbox check nightly

    - name: Test swiftbox get with sudo
      run: |
        sudo swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh
        if [ `which swift` != "/opt/swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $MAINVER is not installed correctly."
        fi
        swiftc -v

    - name: Test swiftbox get
      run: |
        swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh && source $HOME/.swiftbox/env.sh
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $MAINVER is not installed correctly."
        fi
        swiftc -v

    - name: Test swiftbox list
      run: |
        swiftbox list
        sudo swiftbox list --short

    - name: Test swiftbox cleanup
      run: |
        swiftbox cleanup
        sudo swiftbox cleanup

    - name: Test swiftbox remove
      run: sudo swiftbox remove $MAINVER

    - name: Test Swift status
      run: |
        echo "\$PATH=$PATH"
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not removed correctly."
        fi
        swiftc -v

    - name: Test Swift compiler
      run: |
        swift test.swift
        swiftc test.swift -o test && ./test

    - name: Test swiftbox close
      run: swiftbox close

    - name: Test Swift disabled
      run: |
        if hash swift 2> /dev/null
        then
          echo "::error::swiftbox is not closed correctly."
        fi

  test-ubuntu-aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2.5.0
        id: run
        name: Check, install and test Swift
        with:
          arch: aarch64
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          env: |
            MAINVER: "5.7.3"
            ALTVER: "5.6.3"
            OLDVER: "5.5.3"
          run: |
            cat /dev/null > ~/.bashrc
            chmod +x swiftbox.sh
            ./swiftbox.sh -v
            echo "[swiftbox check]"
            ./swiftbox.sh check $MAINVER
            ./swiftbox.sh check $ALTVER
            ./swiftbox.sh check $OLDVER
            echo "[swiftbox get]"
            ./swiftbox.sh get $MAINVER
            source ~/.bashrc
            echo "\$PATH=$PATH"
            echo "[swiftbox list]"
            ./swiftbox.sh list
            echo "[which swift]"
            which swift
            echo "[swift version]"
            swiftc -v

  test-centos:
    container:
      image: centos:7
    runs-on: ubuntu-latest
    env:
      MAINVER: "5.6.3"
      ALTVER: "5.2.5"
      OLDVER: "2.2"
    defaults:
      run:
        shell: su - swifter -c "/bin/bash --login -eo pipefail {0}"
    steps:
    - name: Create a new user
      shell: bash
      run: |
        yum install sudo usermode -y
        useradd swifter --create-home -s /bin/bash
        echo "swifter ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        echo "export MAINVER=$MAINVER" >> /home/swifter/.bash_profile
        echo "export ALTVER=$ALTVER" >> /home/swifter/.bash_profile
        echo "export OLDVER=$OLDVER" >> /home/swifter/.bash_profile

    - name: Checkout
      uses: actions/checkout@v3

    - name: Move repo
      shell: bash
      run: |
        mv ./* /home/swifter
        chown -R swifter /home/swifter

    - name: Test swiftbox version
      run: |
        chmod +x swiftbox.sh
        ./swiftbox.sh -v
        ./swiftbox.sh --version


    - name: Test swiftbox help
      run: |
        ./swiftbox.sh -h
        ./swiftbox.sh --help

    - name: Install swiftbox
      run: |
        sudo cp swiftbox.sh /usr/bin/swiftbox
        swiftbox -v

    - name: Test swiftbox check
      run: |
        swiftbox check $MAINVER
        swiftbox check $ALTVER
        swiftbox check $OLDVER

    - name: Install which
      run: sudo yum install which -y

    - name: Test swiftbox get with sudo
      run: |
        sudo swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh
        if [ `which swift` != "/opt/swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $MAINVER is not installed correctly."
        fi
        swiftc -v

    - name: Test swiftbox get
      run: |
        swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh && source $HOME/.swiftbox/env.sh
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not removed correctly."
        fi
        swiftc -v

    - name: Test swiftbox list
      run: |
        swiftbox list
        sudo swiftbox list --short

    - name: Test swiftbox cleanup
      run: |
        swiftbox cleanup
        sudo swiftbox cleanup

    - name: Test swiftbox remove
      run: sudo swiftbox remove $MAINVER

    - name: Test Swift status
      run: |
        echo "\$PATH=$PATH"
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not removed correctly."
        fi
        swiftc -v

    - name: Test Swift compiler
      run: |
        swift test.swift
        swiftc test.swift -o test && ./test

    - name: Test swiftbox close
      run: swiftbox close

    - name: Test Swift disabled
      run: |
        if hash swift 2> /dev/null
        then
          echo "::error::swiftbox is not closed correctly."
        fi

  test-amzn:
    container:
      image: amazonlinux:2
    runs-on: ubuntu-latest
    env:
      MAINVER: "5.6.3"
      ALTVER: "5.2.5"
      OLDVER: "2.2"
    defaults:
      run:
        shell: su - swifter -c "/bin/bash --login -eo pipefail {0}"
    steps:
    - name: Create a new user
      shell: bash
      run: |
        yum install sudo usermode -y
        useradd swifter --create-home -s /bin/bash
        echo "swifter ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        echo "export MAINVER=$MAINVER" >> /home/swifter/.bash_profile
        echo "export ALTVER=$ALTVER" >> /home/swifter/.bash_profile
        echo "export OLDVER=$OLDVER" >> /home/swifter/.bash_profile

    - name: Install tar and gzip
      shell: bash
      run: yum install tar gzip -y

    - name: Checkout
      uses: actions/checkout@v3

    - name: Move repo
      shell: bash
      run: |
        mv ./* /home/swifter
        chown -R swifter /home/swifter

    - name: Test swiftbox version
      run: |
        chmod +x swiftbox.sh
        ./swiftbox.sh -v
        ./swiftbox.sh --version

    - name: Test swiftbox help
      run: |
        ./swiftbox.sh -h
        ./swiftbox.sh --help

    - name: Install swiftbox
      run: |
        sudo cp swiftbox.sh /usr/bin/swiftbox
        swiftbox -v

    - name: Test swiftbox check
      run: |
        swiftbox check $MAINVER
        swiftbox check $ALTVER
        swiftbox check $OLDVER

    - name: Install which
      run: sudo yum install which -y

    - name: Test swiftbox get with sudo
      run: |
        sudo swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh
        if [ `which swift` != "/opt/swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $MAINVER is not installed correctly."
        fi
        swiftc -v

    - name: Test swiftbox get
      run: |
        swiftbox get $MAINVER
        source /etc/environment && source /opt/swiftbox/env.sh && source $HOME/.swiftbox/env.sh
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not removed correctly."
        fi
        swiftc -v

    - name: Test swiftbox list
      run: |
        swiftbox list
        sudo swiftbox list --short

    - name: Test swiftbox cleanup
      run: |
        swiftbox cleanup
        sudo swiftbox cleanup

    - name: Test swiftbox remove
      run: sudo swiftbox remove $MAINVER

    - name: Test Swift status
      run: |
        echo "\$PATH=$PATH"
        if [ `which swift` != "$HOME/.swiftbox/toolchain/swift-$MAINVER/usr/bin/swift" ]
        then
          echo "::error::Swift $ALTVER is not removed correctly."
        fi
        swiftc -v

    - name: Test Swift compiler
      run: |
        swift test.swift
        swiftc test.swift -o test && ./test

    - name: Test swiftbox close
      run: swiftbox close

    - name: Test Swift disabled
      run: |
        if hash swift 2> /dev/null
        then
          echo "::error::swiftbox is not closed correctly."
        fi

  test-amzn-nightly:
    container:
      image: amazonlinux:2
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash --login -eo pipefail {0}
    steps:
    - name: Install tar and gzip
      run: yum install tar gzip -y

    - name: Checkout
      uses: actions/checkout@v3

    - name: Test swiftbox version
      run: |
        chmod +x swiftbox.sh
        ./swiftbox.sh -v

    - name: Test swiftbox check nightly
      run: ./swiftbox.sh check nightly

    - name: Test swiftbox get nightly
      run: ./swiftbox.sh get nightly

    - name: Install which
      run: yum install which -y

    - name: Test Swift status
      run: |
        echo "\$PATH=$PATH"
        ./swiftbox.sh list
        which swift
        swiftc -v

    - name: Test Swift compiler
      run: |
        source /etc/environment
        source /opt/swiftbox/env.sh
        swift test.swift
        swiftc test.swift -o test && ./test

  test-ubuntu-aarch64-nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2.5.0
        id: run
        name: Install and test Swift
        with:
          arch: aarch64
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          run: |
            cat /dev/null > ~/.bashrc
            chmod +x swiftbox.sh
            ./swiftbox.sh -v
            echo "[swiftbox get]"
            ./swiftbox.sh get nightly
            source ~/.bashrc
            echo "\$PATH=$PATH"
            echo "[swiftbox list]"
            ./swiftbox.sh list

            echo "[which swift]"
            which swift
            echo "[swift version]"
            swiftc -v
